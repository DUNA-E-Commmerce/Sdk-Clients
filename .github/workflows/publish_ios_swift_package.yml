name: DEUNA ios client release

on:
  push:
    tags:
      - 'ios-client-v*'

env:
  USER_EMAIL: ${{ secrets.USER_EMAIL }}
  SOURCE_DIRECTORY: ${{ secrets.SOURCE_DIRECTORY }}
  DESTINATION_GITHUB_USERNAME: ${{ secrets.DESTINATION_GITHUB_USERNAME }}
  DESTINATION_REPOSITORY_NAME: ${{ secrets.DESTINATION_REPOSITORY_NAME }}

jobs:
  copy-to-repo:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Extract version from tag
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/ios-client-v}

    - name: Store the version in version.txt
      run: echo "${{ steps.get_version.outputs.VERSION }}" > version.txt

    - name: Commit version.txt
      run: |
        git config --local user.email "${{ env.USER_EMAIL }}"
        git config --local user.name "GitHub Action"
        git add version.txt
        git commit -m "Update version.txt with version ${{ steps.get_version.outputs.VERSION }}"

    - name: Rename release.yml.template to release.yml
      run: mv "${{ env.SOURCE_DIRECTORY }}/.github/workflows/release.yml.template" .github/workflows/release.yml

    - name: Copy contents to destination repo
      uses: cpina/github-action-push-to-another-repository@v1
      env:
        API_TOKEN_GITHUB: ${{ secrets.DEUNA_PUBLIC_GITHUB_TOKEN }}
      with:
        source-directory: '${{ env.SOURCE_DIRECTORY }}'
        destination-github-username: '${{ env.DESTINATION_GITHUB_USERNAME }}'
        destination-repository-name: '${{ env.DESTINATION_REPOSITORY_NAME }}'
        user-email: '${{ env.USER_EMAIL }}'