/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.OrderTokenRequestOrderItemsInnerDiscountsInner
import org.openapitools.client.models.OrderTokenRequestOrderItemsInnerTaxAmount
import org.openapitools.client.models.OrderTokenRequestOrderItemsInnerTotalAmount
import org.openapitools.client.models.OrderTokenRequestOrderItemsInnerUnitPrice
import org.openapitools.client.models.OrderTokenRequestOrderItemsInnerWeight

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Detalle del producto
 *
 * @param description Descripción del producto
 * @param id Identificador del producto del comercio
 * @param name Nombre del producto
 * @param quantity Es la cantidad del producto que comprara el usuario
 * @param totalAmount 
 * @param unitPrice 
 * @param brand Marca del producto
 * @param category Categoría del producto
 * @param color Color del producto
 * @param detailsUrl URL del producto dentro en la página del comercio
 * @param discounts Referencia de los descuentos aplicados en la orden
 * @param imageUrl URL donde se encuentra alojada la imagen del producto 
 * @param isbn Sistema internacional de numeración de libros (International Standard Book Number)
 * @param manufacturer Fabricante del producto
 * @param options 
 * @param propertySize Tamaño del producto
 * @param sku Número de referencia único (Stock Keeping Unit)
 * @param taxAmount 
 * @param taxable Si es que el producto aplica algún impuesto
 * @param uom Unidad de medida (Unit of Measure)
 * @param upc Código universal del producto (Universal Product Code)
 * @param weight 
 */


data class OrderTokenRequestOrderItemsInner (

    /* Descripción del producto */
    @Json(name = "description")
    val description: kotlin.String,

    /* Identificador del producto del comercio */
    @Json(name = "id")
    val id: kotlin.String,

    /* Nombre del producto */
    @Json(name = "name")
    val name: kotlin.String,

    /* Es la cantidad del producto que comprara el usuario */
    @Json(name = "quantity")
    val quantity: java.math.BigDecimal,

    @Json(name = "total_amount")
    val totalAmount: OrderTokenRequestOrderItemsInnerTotalAmount,

    @Json(name = "unit_price")
    val unitPrice: OrderTokenRequestOrderItemsInnerUnitPrice,

    /* Marca del producto */
    @Json(name = "brand")
    val brand: kotlin.String? = null,

    /* Categoría del producto */
    @Json(name = "category")
    val category: kotlin.String? = null,

    /* Color del producto */
    @Json(name = "color")
    val color: kotlin.String? = null,

    /* URL del producto dentro en la página del comercio */
    @Json(name = "details_url")
    val detailsUrl: kotlin.String? = null,

    /* Referencia de los descuentos aplicados en la orden */
    @Json(name = "discounts")
    val discounts: kotlin.collections.Set<OrderTokenRequestOrderItemsInnerDiscountsInner>? = null,

    /* URL donde se encuentra alojada la imagen del producto  */
    @Json(name = "image_url")
    val imageUrl: kotlin.String? = null,

    /* Sistema internacional de numeración de libros (International Standard Book Number) */
    @Json(name = "isbn")
    val isbn: kotlin.String? = null,

    /* Fabricante del producto */
    @Json(name = "manufacturer")
    val manufacturer: kotlin.String? = null,

    @Json(name = "options")
    val options: kotlin.String? = null,

    /* Tamaño del producto */
    @Json(name = "size")
    val propertySize: kotlin.String? = null,

    /* Número de referencia único (Stock Keeping Unit) */
    @Json(name = "sku")
    val sku: kotlin.String? = null,

    @Json(name = "tax_amount")
    val taxAmount: OrderTokenRequestOrderItemsInnerTaxAmount? = null,

    /* Si es que el producto aplica algún impuesto */
    @Json(name = "taxable")
    val taxable: kotlin.Boolean? = false,

    /* Unidad de medida (Unit of Measure) */
    @Json(name = "uom")
    val uom: kotlin.String? = null,

    /* Código universal del producto (Universal Product Code) */
    @Json(name = "upc")
    val upc: kotlin.String? = null,

    @Json(name = "weight")
    val weight: OrderTokenRequestOrderItemsInnerWeight? = null

)

