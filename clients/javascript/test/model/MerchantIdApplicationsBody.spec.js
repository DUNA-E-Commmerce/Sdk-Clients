/*
 * API Gateway
 * API Gateway
 *
 * OpenAPI spec version: 1.0
 * Contact: checkout@deuna.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiGateway);
  }
}(this, function(expect, ApiGateway) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MerchantIdApplicationsBody', function() {
      beforeEach(function() {
        instance = new ApiGateway.MerchantIdApplicationsBody();
      });

      it('should create an instance of MerchantIdApplicationsBody', function() {
        // TODO: update the code to test MerchantIdApplicationsBody
        expect(instance).to.be.a(ApiGateway.MerchantIdApplicationsBody);
      });

      it('should have the property expireAt (base name: "expire_at")', function() {
        // TODO: update the code to test the property expireAt
        expect(instance).to.have.property('expireAt');
        // expect(instance.expireAt).to.be(expectedValueLiteral);
      });

      it('should have the property isSandbox (base name: "is_sandbox")', function() {
        // TODO: update the code to test the property isSandbox
        expect(instance).to.have.property('isSandbox');
        // expect(instance.isSandbox).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

    });
  });

}));
