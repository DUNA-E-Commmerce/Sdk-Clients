/*
 * API Gateway
 * API Gateway
 *
 * OpenAPI spec version: 1.0
 * Contact: checkout@deuna.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.44
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiGateway);
  }
}(this, function(expect, ApiGateway) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('UserIdCardsBody', function() {
      beforeEach(function() {
        instance = new ApiGateway.UserIdCardsBody();
      });

      it('should create an instance of UserIdCardsBody', function() {
        // TODO: update the code to test UserIdCardsBody
        expect(instance).to.be.a(ApiGateway.UserIdCardsBody);
      });

      it('should have the property address1 (base name: "address1")', function() {
        // TODO: update the code to test the property address1
        expect(instance).to.have.property('address1');
        // expect(instance.address1).to.be(expectedValueLiteral);
      });

      it('should have the property cardHolder (base name: "card_holder")', function() {
        // TODO: update the code to test the property cardHolder
        expect(instance).to.have.property('cardHolder');
        // expect(instance.cardHolder).to.be(expectedValueLiteral);
      });

      it('should have the property cardHolderDni (base name: "card_holder_dni")', function() {
        // TODO: update the code to test the property cardHolderDni
        expect(instance).to.have.property('cardHolderDni');
        // expect(instance.cardHolderDni).to.be(expectedValueLiteral);
      });

      it('should have the property cardNumber (base name: "card_number")', function() {
        // TODO: update the code to test the property cardNumber
        expect(instance).to.have.property('cardNumber');
        // expect(instance.cardNumber).to.be(expectedValueLiteral);
      });

      it('should have the property city (base name: "city")', function() {
        // TODO: update the code to test the property city
        expect(instance).to.have.property('city');
        // expect(instance.city).to.be(expectedValueLiteral);
      });

      it('should have the property country (base name: "country")', function() {
        // TODO: update the code to test the property country
        expect(instance).to.have.property('country');
        // expect(instance.country).to.be(expectedValueLiteral);
      });

      it('should have the property expiryMonth (base name: "expiry_month")', function() {
        // TODO: update the code to test the property expiryMonth
        expect(instance).to.have.property('expiryMonth');
        // expect(instance.expiryMonth).to.be(expectedValueLiteral);
      });

      it('should have the property expiryYear (base name: "expiry_year")', function() {
        // TODO: update the code to test the property expiryYear
        expect(instance).to.have.property('expiryYear');
        // expect(instance.expiryYear).to.be(expectedValueLiteral);
      });

      it('should have the property phone (base name: "phone")', function() {
        // TODO: update the code to test the property phone
        expect(instance).to.have.property('phone');
        // expect(instance.phone).to.be(expectedValueLiteral);
      });

      it('should have the property state (base name: "state")', function() {
        // TODO: update the code to test the property state
        expect(instance).to.have.property('state');
        // expect(instance.state).to.be(expectedValueLiteral);
      });

      it('should have the property zip (base name: "zip")', function() {
        // TODO: update the code to test the property zip
        expect(instance).to.have.property('zip');
        // expect(instance.zip).to.be(expectedValueLiteral);
      });

    });
  });

}));
