/**
 * API Gateway
 * API Gateway
 *
 * The version of the OpenAPI document: 1.0
 * Contact: checkout@deuna.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataAmount from './MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataAmount';
import MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataCustomer from './MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataCustomer';
import MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataFromCard from './MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataFromCard';
import MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataMerchant from './MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataMerchant';

/**
 * The MerchantsTransactionsPurchasePost200ResponseOrderPaymentData model module.
 * @module model/MerchantsTransactionsPurchasePost200ResponseOrderPaymentData
 * @version 1.0
 */
class MerchantsTransactionsPurchasePost200ResponseOrderPaymentData {
    /**
     * Constructs a new <code>MerchantsTransactionsPurchasePost200ResponseOrderPaymentData</code>.
     * @alias module:model/MerchantsTransactionsPurchasePost200ResponseOrderPaymentData
     * @param amount {module:model/MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataAmount} 
     * @param createdAt {String} 
     * @param customer {module:model/MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataCustomer} 
     * @param fromCard {module:model/MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataFromCard} 
     * @param id {String} 
     * @param merchant {module:model/MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataMerchant} 
     * @param methodType {String} 
     * @param processor {String} 
     * @param status {String} 
     * @param updatedAt {String} 
     */
    constructor(amount, createdAt, customer, fromCard, id, merchant, methodType, processor, status, updatedAt) { 
        
        MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.initialize(this, amount, createdAt, customer, fromCard, id, merchant, methodType, processor, status, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, createdAt, customer, fromCard, id, merchant, methodType, processor, status, updatedAt) { 
        obj['amount'] = amount;
        obj['created_at'] = createdAt;
        obj['customer'] = customer;
        obj['from_card'] = fromCard;
        obj['id'] = id;
        obj['merchant'] = merchant;
        obj['method_type'] = methodType;
        obj['processor'] = processor;
        obj['status'] = status;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>MerchantsTransactionsPurchasePost200ResponseOrderPaymentData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MerchantsTransactionsPurchasePost200ResponseOrderPaymentData} obj Optional instance to populate.
     * @return {module:model/MerchantsTransactionsPurchasePost200ResponseOrderPaymentData} The populated <code>MerchantsTransactionsPurchasePost200ResponseOrderPaymentData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MerchantsTransactionsPurchasePost200ResponseOrderPaymentData();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataAmount.constructFromObject(data['amount']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataCustomer.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('from_card')) {
                obj['from_card'] = MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataFromCard.constructFromObject(data['from_card']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('merchant')) {
                obj['merchant'] = MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataMerchant.constructFromObject(data['merchant']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('method_type')) {
                obj['method_type'] = ApiClient.convertToType(data['method_type'], 'String');
            }
            if (data.hasOwnProperty('processor')) {
                obj['processor'] = ApiClient.convertToType(data['processor'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MerchantsTransactionsPurchasePost200ResponseOrderPaymentData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MerchantsTransactionsPurchasePost200ResponseOrderPaymentData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `amount`
        if (data['amount']) { // data not null
          MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataAmount.validateJSON(data['amount']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataCustomer.validateJSON(data['customer']);
        }
        // validate the optional field `from_card`
        if (data['from_card']) { // data not null
          MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataFromCard.validateJSON(data['from_card']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `merchant`
        if (data['merchant']) { // data not null
          MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataMerchant.validateJSON(data['merchant']);
        }
        // ensure the json data is a string
        if (data['method_type'] && !(typeof data['method_type'] === 'string' || data['method_type'] instanceof String)) {
            throw new Error("Expected the field `method_type` to be a primitive type in the JSON string but got " + data['method_type']);
        }
        // ensure the json data is a string
        if (data['processor'] && !(typeof data['processor'] === 'string' || data['processor'] instanceof String)) {
            throw new Error("Expected the field `processor` to be a primitive type in the JSON string but got " + data['processor']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}

MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.RequiredProperties = ["amount", "created_at", "customer", "from_card", "id", "merchant", "method_type", "processor", "status", "updated_at"];

/**
 * @member {module:model/MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataAmount} amount
 */
MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.prototype['amount'] = undefined;

/**
 * @member {String} created_at
 */
MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.prototype['created_at'] = undefined;

/**
 * @member {module:model/MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataCustomer} customer
 */
MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.prototype['customer'] = undefined;

/**
 * @member {module:model/MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataFromCard} from_card
 */
MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.prototype['from_card'] = undefined;

/**
 * @member {String} id
 */
MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.prototype['id'] = undefined;

/**
 * @member {module:model/MerchantsTransactionsPurchasePost200ResponseOrderPaymentDataMerchant} merchant
 */
MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.prototype['merchant'] = undefined;

/**
 * @member {Object} metadata
 */
MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.prototype['metadata'] = undefined;

/**
 * @member {String} method_type
 */
MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.prototype['method_type'] = undefined;

/**
 * @member {String} processor
 */
MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.prototype['processor'] = undefined;

/**
 * @member {String} status
 */
MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.prototype['status'] = undefined;

/**
 * @member {String} updated_at
 */
MerchantsTransactionsPurchasePost200ResponseOrderPaymentData.prototype['updated_at'] = undefined;






export default MerchantsTransactionsPurchasePost200ResponseOrderPaymentData;

