/**
 * API Gateway
 * API Gateway
 *
 * The version of the OpenAPI document: 1.0
 * Contact: checkout@deuna.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MerchantsTransactionsPurchasePostRequestCreditCard model module.
 * @module model/MerchantsTransactionsPurchasePostRequestCreditCard
 * @version 1.0
 */
class MerchantsTransactionsPurchasePostRequestCreditCard {
    /**
     * Constructs a new <code>MerchantsTransactionsPurchasePostRequestCreditCard</code>.
     * @alias module:model/MerchantsTransactionsPurchasePostRequestCreditCard
     * @param address1 {String} 
     * @param cardCvv {String} 
     * @param cardHolder {String} 
     * @param cardHolderDni {String} 
     * @param cardNumber {String} 
     * @param city {String} 
     * @param country {String} 
     * @param expiryMonth {String} 
     * @param expiryYear {String} 
     * @param phone {String} 
     * @param state {String} 
     * @param zip {String} 
     */
    constructor(address1, cardCvv, cardHolder, cardHolderDni, cardNumber, city, country, expiryMonth, expiryYear, phone, state, zip) { 
        
        MerchantsTransactionsPurchasePostRequestCreditCard.initialize(this, address1, cardCvv, cardHolder, cardHolderDni, cardNumber, city, country, expiryMonth, expiryYear, phone, state, zip);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address1, cardCvv, cardHolder, cardHolderDni, cardNumber, city, country, expiryMonth, expiryYear, phone, state, zip) { 
        obj['address1'] = address1;
        obj['card_cvv'] = cardCvv;
        obj['card_holder'] = cardHolder;
        obj['card_holder_dni'] = cardHolderDni;
        obj['card_number'] = cardNumber;
        obj['city'] = city;
        obj['country'] = country;
        obj['expiry_month'] = expiryMonth;
        obj['expiry_year'] = expiryYear;
        obj['phone'] = phone;
        obj['state'] = state;
        obj['zip'] = zip;
    }

    /**
     * Constructs a <code>MerchantsTransactionsPurchasePostRequestCreditCard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MerchantsTransactionsPurchasePostRequestCreditCard} obj Optional instance to populate.
     * @return {module:model/MerchantsTransactionsPurchasePostRequestCreditCard} The populated <code>MerchantsTransactionsPurchasePostRequestCreditCard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MerchantsTransactionsPurchasePostRequestCreditCard();

            if (data.hasOwnProperty('address1')) {
                obj['address1'] = ApiClient.convertToType(data['address1'], 'String');
            }
            if (data.hasOwnProperty('card_cvv')) {
                obj['card_cvv'] = ApiClient.convertToType(data['card_cvv'], 'String');
            }
            if (data.hasOwnProperty('card_holder')) {
                obj['card_holder'] = ApiClient.convertToType(data['card_holder'], 'String');
            }
            if (data.hasOwnProperty('card_holder_dni')) {
                obj['card_holder_dni'] = ApiClient.convertToType(data['card_holder_dni'], 'String');
            }
            if (data.hasOwnProperty('card_number')) {
                obj['card_number'] = ApiClient.convertToType(data['card_number'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('expiry_month')) {
                obj['expiry_month'] = ApiClient.convertToType(data['expiry_month'], 'String');
            }
            if (data.hasOwnProperty('expiry_year')) {
                obj['expiry_year'] = ApiClient.convertToType(data['expiry_year'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('zip')) {
                obj['zip'] = ApiClient.convertToType(data['zip'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MerchantsTransactionsPurchasePostRequestCreditCard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MerchantsTransactionsPurchasePostRequestCreditCard</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MerchantsTransactionsPurchasePostRequestCreditCard.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['address1'] && !(typeof data['address1'] === 'string' || data['address1'] instanceof String)) {
            throw new Error("Expected the field `address1` to be a primitive type in the JSON string but got " + data['address1']);
        }
        // ensure the json data is a string
        if (data['card_cvv'] && !(typeof data['card_cvv'] === 'string' || data['card_cvv'] instanceof String)) {
            throw new Error("Expected the field `card_cvv` to be a primitive type in the JSON string but got " + data['card_cvv']);
        }
        // ensure the json data is a string
        if (data['card_holder'] && !(typeof data['card_holder'] === 'string' || data['card_holder'] instanceof String)) {
            throw new Error("Expected the field `card_holder` to be a primitive type in the JSON string but got " + data['card_holder']);
        }
        // ensure the json data is a string
        if (data['card_holder_dni'] && !(typeof data['card_holder_dni'] === 'string' || data['card_holder_dni'] instanceof String)) {
            throw new Error("Expected the field `card_holder_dni` to be a primitive type in the JSON string but got " + data['card_holder_dni']);
        }
        // ensure the json data is a string
        if (data['card_number'] && !(typeof data['card_number'] === 'string' || data['card_number'] instanceof String)) {
            throw new Error("Expected the field `card_number` to be a primitive type in the JSON string but got " + data['card_number']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['expiry_month'] && !(typeof data['expiry_month'] === 'string' || data['expiry_month'] instanceof String)) {
            throw new Error("Expected the field `expiry_month` to be a primitive type in the JSON string but got " + data['expiry_month']);
        }
        // ensure the json data is a string
        if (data['expiry_year'] && !(typeof data['expiry_year'] === 'string' || data['expiry_year'] instanceof String)) {
            throw new Error("Expected the field `expiry_year` to be a primitive type in the JSON string but got " + data['expiry_year']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['zip'] && !(typeof data['zip'] === 'string' || data['zip'] instanceof String)) {
            throw new Error("Expected the field `zip` to be a primitive type in the JSON string but got " + data['zip']);
        }

        return true;
    }


}

MerchantsTransactionsPurchasePostRequestCreditCard.RequiredProperties = ["address1", "card_cvv", "card_holder", "card_holder_dni", "card_number", "city", "country", "expiry_month", "expiry_year", "phone", "state", "zip"];

/**
 * @member {String} address1
 */
MerchantsTransactionsPurchasePostRequestCreditCard.prototype['address1'] = undefined;

/**
 * @member {String} card_cvv
 */
MerchantsTransactionsPurchasePostRequestCreditCard.prototype['card_cvv'] = undefined;

/**
 * @member {String} card_holder
 */
MerchantsTransactionsPurchasePostRequestCreditCard.prototype['card_holder'] = undefined;

/**
 * @member {String} card_holder_dni
 */
MerchantsTransactionsPurchasePostRequestCreditCard.prototype['card_holder_dni'] = undefined;

/**
 * @member {String} card_number
 */
MerchantsTransactionsPurchasePostRequestCreditCard.prototype['card_number'] = undefined;

/**
 * @member {String} city
 */
MerchantsTransactionsPurchasePostRequestCreditCard.prototype['city'] = undefined;

/**
 * @member {String} country
 */
MerchantsTransactionsPurchasePostRequestCreditCard.prototype['country'] = undefined;

/**
 * @member {String} expiry_month
 */
MerchantsTransactionsPurchasePostRequestCreditCard.prototype['expiry_month'] = undefined;

/**
 * @member {String} expiry_year
 */
MerchantsTransactionsPurchasePostRequestCreditCard.prototype['expiry_year'] = undefined;

/**
 * @member {String} phone
 */
MerchantsTransactionsPurchasePostRequestCreditCard.prototype['phone'] = undefined;

/**
 * @member {String} state
 */
MerchantsTransactionsPurchasePostRequestCreditCard.prototype['state'] = undefined;

/**
 * @member {String} zip
 */
MerchantsTransactionsPurchasePostRequestCreditCard.prototype['zip'] = undefined;






export default MerchantsTransactionsPurchasePostRequestCreditCard;

