/**
 * API Gateway
 * API Gateway
 *
 * The version of the OpenAPI document: 1.0
 * Contact: checkout@deuna.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping model module.
 * @module model/MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping
 * @version 1.0
 */
class MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping {
    /**
     * Constructs a new <code>MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping</code>.
     * @alias module:model/MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping
     * @param maximumCostAllowed {Number} 
     */
    constructor(maximumCostAllowed) { 
        
        MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping.initialize(this, maximumCostAllowed);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, maximumCostAllowed) { 
        obj['maximum_cost_allowed'] = maximumCostAllowed;
    }

    /**
     * Constructs a <code>MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping} obj Optional instance to populate.
     * @return {module:model/MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping} The populated <code>MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping();

            if (data.hasOwnProperty('maximum_cost_allowed')) {
                obj['maximum_cost_allowed'] = ApiClient.convertToType(data['maximum_cost_allowed'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping.RequiredProperties = ["maximum_cost_allowed"];

/**
 * @member {Number} maximum_cost_allowed
 */
MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping.prototype['maximum_cost_allowed'] = undefined;






export default MerchantsExternalOrdersOrderTokenShippingRatePost200ResponseOrderDiscountsInnerFreeShipping;

