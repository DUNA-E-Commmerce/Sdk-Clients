/* tslint:disable */
/* eslint-disable */
/**
 * API Gateway
 * API Gateway
 *
 * The version of the OpenAPI document: 1.0
 * Contact: checkout@deuna.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MerchantsMerchantIdApplicationsPost200Response
 */
export interface MerchantsMerchantIdApplicationsPost200Response {
    /**
     * 
     * @type {string}
     * @memberof MerchantsMerchantIdApplicationsPost200Response
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof MerchantsMerchantIdApplicationsPost200Response
     */
    id?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MerchantsMerchantIdApplicationsPost200Response
     */
    isSandbox?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MerchantsMerchantIdApplicationsPost200Response
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof MerchantsMerchantIdApplicationsPost200Response
     */
    privateKey?: string;
    /**
     * 
     * @type {string}
     * @memberof MerchantsMerchantIdApplicationsPost200Response
     */
    publicKey?: string;
    /**
     * 
     * @type {string}
     * @memberof MerchantsMerchantIdApplicationsPost200Response
     */
    signingSecret?: string;
    /**
     * 
     * @type {string}
     * @memberof MerchantsMerchantIdApplicationsPost200Response
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof MerchantsMerchantIdApplicationsPost200Response
     */
    updatedAt?: string;
}

/**
 * Check if a given object implements the MerchantsMerchantIdApplicationsPost200Response interface.
 */
export function instanceOfMerchantsMerchantIdApplicationsPost200Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MerchantsMerchantIdApplicationsPost200ResponseFromJSON(json: any): MerchantsMerchantIdApplicationsPost200Response {
    return MerchantsMerchantIdApplicationsPost200ResponseFromJSONTyped(json, false);
}

export function MerchantsMerchantIdApplicationsPost200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MerchantsMerchantIdApplicationsPost200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'isSandbox': !exists(json, 'is_sandbox') ? undefined : json['is_sandbox'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'privateKey': !exists(json, 'private_key') ? undefined : json['private_key'],
        'publicKey': !exists(json, 'public_key') ? undefined : json['public_key'],
        'signingSecret': !exists(json, 'signing_secret') ? undefined : json['signing_secret'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
    };
}

export function MerchantsMerchantIdApplicationsPost200ResponseToJSON(value?: MerchantsMerchantIdApplicationsPost200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': value.createdAt,
        'id': value.id,
        'is_sandbox': value.isSandbox,
        'name': value.name,
        'private_key': value.privateKey,
        'public_key': value.publicKey,
        'signing_secret': value.signingSecret,
        'status': value.status,
        'updated_at': value.updatedAt,
    };
}

