/* tslint:disable */
/* eslint-disable */
/**
 * API Gateway
 * API Gateway
 *
 * The version of the OpenAPI document: 1.0
 * Contact: checkout@deuna.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MerchantsApplicationsValidateGet200Response
 */
export interface MerchantsApplicationsValidateGet200Response {
    /**
     * 
     * @type {boolean}
     * @memberof MerchantsApplicationsValidateGet200Response
     */
    isSandbox?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MerchantsApplicationsValidateGet200Response
     */
    keyType?: string;
    /**
     * 
     * @type {string}
     * @memberof MerchantsApplicationsValidateGet200Response
     */
    merchantId?: string;
    /**
     * 
     * @type {string}
     * @memberof MerchantsApplicationsValidateGet200Response
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof MerchantsApplicationsValidateGet200Response
     */
    status?: string;
}

/**
 * Check if a given object implements the MerchantsApplicationsValidateGet200Response interface.
 */
export function instanceOfMerchantsApplicationsValidateGet200Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MerchantsApplicationsValidateGet200ResponseFromJSON(json: any): MerchantsApplicationsValidateGet200Response {
    return MerchantsApplicationsValidateGet200ResponseFromJSONTyped(json, false);
}

export function MerchantsApplicationsValidateGet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MerchantsApplicationsValidateGet200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isSandbox': !exists(json, 'is_sandbox') ? undefined : json['is_sandbox'],
        'keyType': !exists(json, 'key_type') ? undefined : json['key_type'],
        'merchantId': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function MerchantsApplicationsValidateGet200ResponseToJSON(value?: MerchantsApplicationsValidateGet200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'is_sandbox': value.isSandbox,
        'key_type': value.keyType,
        'merchant_id': value.merchantId,
        'name': value.name,
        'status': value.status,
    };
}

